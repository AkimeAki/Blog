---
import Layout from "@/layouts/Layout.astro";
import { formatDate } from "@/lib/format-date";
import { getListAllContents } from "@/lib/microcms";
import type { Blog } from "@/lib/microcms";

const posts = await getListAllContents<Blog>("blogs");
---

<Layout ogType="blog">
	<div class="post-list">
		{
			posts.map((post) => (
				<div class="post-card">
					<time class="post-date" datetime={post.publishedAt ?? post.createdAt}>
						{formatDate(post.publishedAt ?? post.createdAt)}
					</time>
					<div>
						{post.thumbnail !== undefined ? (
							<img class="post-thumbnail" src={`${post.thumbnail.url}?fm=webp&w=600`} />
						) : (
							<img class="post-thumbnail" src="/default-thumbnail.png" />
						)}
						<h2 class="post-title">{post.title}</h2>
					</div>
					<div class="post-tags">
						{post.tags.map((tag) => {
							return (
								<div class="post-tag">
									{/* <img
										class="post-tag-icon"
										src={""}
										width={size}
										height={size}
										alt={`${tag.name}のアイコン`}
									/> */}
									<span class="post-tag-name">{tag.name}</span>
								</div>
							);
						})}
					</div>
					<a
						class="post-link"
						href={`/${post.id}`}
						data-id={post.id}
						data-tags={JSON.stringify(post.tags.map((tag) => tag.id))}
						aria-label={`記事『${post.title}』を読む`}
					/>
				</div>
			))
		}
	</div>
</Layout>

<style lang="scss">
	.post-list {
		display: grid;
		grid-template-columns: 1fr 1fr 1fr 1fr;
		gap: 20px;
		padding: 0 30px 0;
		width: 100%;
		max-width: 1200px;
		margin: 0 auto;

		@media (max-width: 970px) {
			grid-template-columns: 1fr 1fr 1fr;
		}

		@media (max-width: 800px) {
			grid-template-columns: 1fr 1fr;
		}

		@media (max-width: 700px) {
			grid-template-columns: 1fr 1fr;
			padding-left: 5px;
			padding-right: 5px;
		}

		@media (max-width: 600px) {
			grid-template-columns: 1fr;
			padding-left: 5px;
			padding-right: 5px;
		}

		.post-card {
			display: flex;
			flex-direction: column;
			justify-content: space-between;
			position: relative;
			background-color: white;
			padding: 40px 10px 10px;
			box-shadow: 0 0 3px #cccccc;
			transition-duration: 200ms;

			.post-date {
				position: absolute;
				top: 0;
				left: 0;
				font-size: 15px;
				background-color: #a3a3a3;
				color: white;
				padding: 2px 5px;
			}

			.post-title {
				font-size: 15px;
			}

			.post-thumbnail {
				width: 100%;
			}

			.post-tags {
				display: flex;
				gap: 5px;
				flex-wrap: wrap;
				align-items: center;
				padding-top: 30px;

				.post-tag {
					display: flex;
					gap: 5px;
					flex-wrap: wrap;
					align-items: center;

					.post-tag-name {
						font-size: 10px;
					}
				}
			}

			&:hover {
				.post-tag-icons[data-is-touch-device="false"] {
					opacity: 1;
				}
			}

			.post-link {
				display: block;
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;

				:global(.flow-tag) {
					position: absolute;
					width: 40px;
					aspect-ratio: 1/1;
					top: 90%;
					image-rendering: pixelated;
					animation-iteration-count: 1;
					animation-timing-function: ease-out;
					opacity: 0;
					user-select: none;
					pointer-events: none;

					&[data-tag="astro"] {
						animation-name: tagAnimationAstro;
						animation-duration: 1500ms;
					}

					@keyframes tagAnimationAstro {
						0% {
							transform: translateX(5px);
						}
						5% {
							transform: translateX(-5px);
						}
						10% {
							transform: translateX(5px);
						}
						15% {
							transform: translateX(-5px);
						}
						20% {
							transform: translateX(5px);
						}
						25% {
							transform: translateX(-5px);
						}
						30% {
							transform: translateX(5px);
						}
						35% {
							transform: translateX(-5px);
						}
						40% {
							transform: translateX(5px);
						}
						45% {
							transform: translateX(-5px);
						}
						50% {
							opacity: 1;
							transform: translateY(0);
						}
						100% {
							opacity: 0;
							transform: translateY(-500px);
						}
					}
				}
			}
		}
	}
</style>

<script>
	const flowTagIcons = () => {
		const postLinks = document.querySelectorAll<HTMLAnchorElement>(".post-link");
		postLinks.forEach((postLink) => {
			postLink.addEventListener(
				"mouseover",
				() => {
					if (document.body.dataset.touch === "true") {
						return;
					}

					const tags: string[] = JSON.parse(postLink.dataset.tags ?? "[]");

					tags.forEach((tagId) => {
						const delay = Math.random() * 2001;
						const x = Math.random() * postLink.clientWidth + 1 + "px";

						if (tagId !== "astro") {
							return;
						}

						setTimeout(() => {
							const icon = document.createElement("img");
							icon.src = `/tag-logos/${tagId}.gif`;
							icon.classList.add("flow-tag");
							icon.dataset.tag = tagId;
							icon.style.left = x;
							postLink.appendChild(icon);
							setTimeout(() => {
								icon.remove();
							}, 6000);
						}, delay);
					});
				},
				false
			);
		});
	};

	flowTagIcons();
	document.addEventListener("astro:after-swap", flowTagIcons);
</script>
