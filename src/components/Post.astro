---
import type { Blog } from "@/lib/microcms";
import type { MicroCMSListContent } from "microcms-js-sdk";
import { formatDate } from "@/lib/format-date";
import { codeToHtml } from "shiki";
import { JSDOM } from "jsdom";

interface Props {
	post: Blog & MicroCMSListContent;
}

const { post } = Astro.props;

const contentsDom = new JSDOM(post.contents);
const document = contentsDom.window.document;
const codes = document.querySelectorAll("pre > code");
for (const code of codes) {
	let lang = "";
	for (const className of code.classList.value.split(" ")) {
		const match = className.match(/^language-(.+)$/);
		if (match !== null) {
			lang = match[1] ?? "";
			break;
		}
	}

	if (lang !== "" && code.textContent !== null) {
		const hilightedCode = await codeToHtml(code.textContent, {
			lang: lang,
			theme: "github-dark-dimmed"
		});

		if (code.parentElement !== null) {
			code.parentElement.outerHTML = hilightedCode;
		}
	}
}

const images = document.querySelectorAll("img");
for (const image of images) {
	image.src = `${image.src}?fm=webp`;
	image.loading = "lazy";
}

const body = document.querySelector("body");
const contents = body !== null ? body.innerHTML : "";
---

<div class="post-info">
	<h2 class="post-title">{post.title}</h2>
	{
		post.thumbnail !== undefined && (
			<img
				class="post-thumbnail"
				src={`${post.thumbnail.url}?fm=webp&w=800`}
				transition:name={`${post.id}-image`}
				alt={post.title}
			/>
		)
	}
</div>

<div class="post-head">
	<div class="post-tags">
		{
			post.tags.map((tag) => {
				const size = 20;

				return (
					<div class="post-tag">
						<img
							class="post-tag-icon"
							src={tag.image !== undefined ? tag.image.url : ""}
							width={size}
							height={size}
							alt={tag.name}
						/>
						<span class="post-tag-name">{tag.name}</span>
					</div>
				);
			})
		}
	</div>
	<time class="post-published-at" datetime={post.publishedAt ?? post.createdAt}>
		{formatDate(post.publishedAt ?? post.createdAt)}
	</time>
</div>
<article class="cms-contents">
	<div class="rich-contents" set:html={contents} />
</article>

<style lang="scss">
	.post-info {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 30px;
		margin-bottom: 30px;

		.post-title {
			font-size: 30px;
			font-weight: 500;
			text-align: center;
			width: 100%;
			max-width: 1000px;
			padding: 50px 0;
			word-wrap: break-word;
			overflow-wrap: anywhere;
			word-break: break-word;
			word-break: auto-phrase;
		}

		.post-thumbnail {
			width: 100%;
			max-width: 800px;
		}
	}

	.post-head {
		width: 100%;
		max-width: 800px;
		margin: 0 auto 60px auto;

		.post-tags {
			display: flex;
			gap: 10px;
			flex-wrap: wrap;
			align-items: center;
			padding: 10px 0 30px;

			.post-tag {
				display: flex;
				gap: 5px;
				flex-wrap: wrap;
				align-items: center;

				.post-tag-icon {
					border-radius: 9999px;
					width: 20px;
					height: auto;
					background-color: #dfdfdf;
				}

				.post-tag-name {
					font-size: 13px;
				}
			}
		}

		.post-published-at {
			font-size: 15px;
			text-align: right;
			display: block;
		}
	}

	.cms-contents {
		width: 100%;
		max-width: 800px;
		margin: 0 auto;

		.rich-contents {
			display: flex;
			flex-direction: column;
			gap: 30px;

			& :global(a) {
				color: #07a715;

				@media (prefers-color-scheme: dark) {
					color: #9deb83;
				}
			}

			& :global(img) {
				max-width: 100%;
				height: auto;
				margin: 0 auto;
				display: block;
			}

			& :global(h4) {
				margin-top: 40px;
				font-size: 17px;
				text-decoration: underline;
			}

			& :global(h3) {
				border-bottom: 1px solid black;
				margin-top: 40px;
				font-size: 20px;
				padding: 10px 0;

				@media (prefers-color-scheme: dark) {
					border-bottom: 1px solid white;
				}
			}

			& :global(pre > code),
			& :global(pre > code *) {
				font-family: "Source Code Pro", "Noto Sans JP", monospace;
				tab-size: 4;
				-moz-tab-size: 4;
				font-size: 13px;
			}

			& :global(pre:has(code)) {
				padding: 5px 10px 10px;
				border-radius: 7px;
				overflow-x: auto;
			}

			& :global(div[data-filename] > pre:has(code)) {
				border-top-left-radius: 0;
			}

			& :global(div[data-filename]) {
				position: relative;
				padding-top: 22px;

				&:after {
					position: absolute;
					content: attr(data-filename);
					top: 0;
					left: 0;
					background-color: white;
					border-top-right-radius: 7px;
					border-top-left-radius: 7px;
					padding: 3px 15px;
					font-size: 14px;
					border-top: 2px solid #2e2e2e;
					border-left: 2px solid #2e2e2e;
					border-right: 2px solid #2e2e2e;
					font-weight: 700;

					@media (prefers-color-scheme: dark) {
						background-color: #242424;
						border-top: 2px solid #242424;
						border-left: 2px solid #242424;
						border-right: 2px solid #242424;
					}
				}
			}

			& > :global(p) {
				line-height: 1.6;
			}

			& > :global(p > code) {
				font-family: "Source Code Pro", monospace;
				background-color: #242424;
				color: white;
				padding: 2px 10px;
				border-radius: 6px;
				font-size: 13px;
				margin: 0 5px;
				vertical-align: middle;
			}

			& :global(.iframely-embed) {
				display: flex;
				justify-content: center;

				& > div {
					max-width: 500px;
				}
			}

			& :global(.iframely-embed > div) {
				max-width: 500px;
			}

			& :global(.iframely-responsive) {
				position: relative;
				top: 0;
				left: 0;
				width: 100%;
				height: 0;
				padding-bottom: 56.25%;
			}

			& :global(.iframely-responsive > *) {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				border: 0;
			}
		}
	}
</style>
